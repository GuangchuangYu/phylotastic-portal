<% provide(:title, "Phylotastic Jobs") %>

<h2>Jobs</h2>

<div class="row">
  <div class="col-md-4">
    <div class="panel panel-default">
      <% unless @con_link_jobs.empty? %>
        <%= render partial: "job_panel", locals: {jobs: @con_link_jobs, heading: "Acquired from URI"} %>
      <% end %>

      <% unless @con_file_jobs.empty? %>
        <%= render partial: "job_panel", locals: {jobs: @con_file_jobs, heading: "Acquired from file"} %>
      <% end %>

      <% unless @con_taxon_jobs.empty? %>
        <%= render partial: "job_panel", locals: {jobs: @con_taxon_jobs, heading: "From all sepecies of a taxon"} %>
      <% end %>

      <% unless @selection_taxon_jobs.empty? %>
        <%= render partial: "job_panel", locals: {jobs: @selection_taxon_jobs, heading: "From some species of a taxon"} %>
      <% end %>

      <% unless @subset_taxon_jobs.empty? %>
        <%= render partial: "job_panel", locals: {jobs: @subset_taxon_jobs, heading: "From genome or location"} %>
      <% end %>
      
      <% if !@prebuilt_jobs.empty? || !@prebuilt_public_lists.empty? || !@prebuilt_jobs_failed.empty? %>
        <div class="panel-heading">
          <h3 class="panel-title">
            From pre-built list
          </h3>
        </div>
        <%= render partial: "prebuilt_list_panel", locals: {pj: @prebuilt_jobs, type: 1} %>
        <%= render partial: "prebuilt_list_panel", locals: {pj: @prebuilt_public_lists, type: 2} %>
        <%= render partial: "prebuilt_list_panel", locals: {pj: @prebuilt_jobs_failed, type: 3} %>
      <% end %>
    </div>
  </div>
  
  <div class="col-md-8">
    <div>
      <%= render partial: "job_content", locals: {jobs: @con_link_jobs} %>
      <%= render partial: "job_content", locals: {jobs: @con_file_jobs} %>

      <%= render partial: "job_content", locals: {jobs: @con_taxon_jobs} %>

      <%= render partial: "job_content", locals: {jobs: @selection_taxon_jobs} %>

      <%= render partial: "job_content", locals: {jobs: @subset_taxon_jobs} %>
    
      <%= render partial: "prebuilt_list_content", locals: {jobs: @prebuilt_jobs, type: 1} %>
      <%= render partial: "prebuilt_public_list_content", locals: {jobs: @prebuilt_public_lists, type: 2} %>
      <%= render partial: "prebuilt_list_failed_content", locals: {jobs: @prebuilt_jobs_failed, type: 3} %>
    </div>
  </div>
  
</div>
       
<script type="text/javascript">
$(document).ready(function() {
  var processing_trees = <%= @processing %>;
  var processing_lists = <%= @processing_lists %>;
  
  Notification.requestPermission();
  function spawnNotification(theBody,theIcon,theTitle) {
    var options = {
        body: theBody,
        icon: theIcon
    }
    var n = new Notification(theTitle,options);
  }
  socket = new WebSocket("ws://" + window.location.host + "/track")

  socket.onopen = function(event) {
    for (i=processing_trees.length-1; i>=0 ; i--) {
      socket.send( JSON.stringify({"type": "tree", "id": processing_trees[i]}) );
      $("#" + i).parents("td").siblings('.tree-status').html("<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span>");
    }
    
    for (i=processing_lists.length-1; i>=0; i--) {
      socket.send( JSON.stringify({"type": "list", "id": processing_lists[i]}) );
    }
  } 
  
  socket.onmessage = function(event) {
    data = JSON.parse(event.data);
    console.log(data);
    if (event.data.length) {
      if (data["type"] == "tree") {
        // Change status of tree in view
        $("#" + data["tree_id"]).parents("td").siblings('.tree-status').html(tree_status(data["status"]));
      
        if (data["status"] == "completed") {        
          // Remove the tree that "completed" in processing_trees 
          index = processing_trees.indexOf(parseInt(data["tree_id"]));
          if (index > -1) {
            processing_trees.splice(index, 1);
          }
        
          // Hide "check status" btn
          $("#" + data["tree_id"]).parents("td").find('.check-status').addClass("hide");
        
          // Display "view tree" btn
          $("#" + data["tree_id"]).parents("td").children('.action-view').children('.hide').removeClass("hide");
        
          // Send notification
          spawnNotification("Your tree is ready to view", "http://www.cs.nmsu.edu/phylotastic/images/logo_huge.png", "Tree #" + data["tree_id"] + " is " + data["status"]);        
        } else if (data["status"] == "resolved") {
          $("#" + data["tree_id"]).parents("td").children('.action-prune').html("<a href='/trees/" + data["tree_id"] + "/edit'>Check name list</a>");
        
          // Send notification
          spawnNotification("To proceed, choose 'Check name list' in the Jobs table.", "http://www.cs.nmsu.edu/phylotastic/images/logo_huge.png", "Names have been acquired for job #" + data["tree_id"]);
        }
      }
      else if (data["type"] == "list") {
        // Send notification
        console.log(data);
        if (data["status"] == null) {
          spawnNotification("", "http://www.cs.nmsu.edu/phylotastic/images/logo_huge.png", "Your list can not be imported");            
        } else if (data["status"] == true) {
          spawnNotification("Please reload your browser", "http://www.cs.nmsu.edu/phylotastic/images/logo_huge.png", "Your file is proceed"); 
        } else if (data["status"] == false) {
          spawnNotification("Please reload your browser to re-upload", "http://www.cs.nmsu.edu/phylotastic/images/logo_huge.png", "Your list can not be imported"); 
        }
      }
    }
  }

  $(".check-status").click(function(event) {
    event.preventDefault();
    params = $(this).attr('id');
    socket.send(params);
    $("#" + params).parents("td").siblings('.tree-status').html("<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span>");
  })
  
  function tree_status(s) {
    var msg;
    switch(s) {
      case "resolved":
        msg = "Names acquired: click \"verify names\" to approve list and get a tree";
        break;
      case "unsucessfully-resolved":
        msg = "Sorry! We could not acquire a list of names!";
        break;
      case "unsuccessfully-constructed":
        msg = "Sorry! We could not acquire a tree!";
        break;
      case "completed":
        msg = "Tree acquired: click \"View tree\" to see it";
        break;
    }
    return msg;
  }
  
  $("a[id*='job-in-nav-']").click(function() {
    eles = $(this).attr("id").split("-");
    $("div[id*='job-content']").addClass("hide");
    $("#job-content-" + eles[3] + "-" + eles[4]).removeClass("hide");
    
    return false;
  });

});

</script>