<% provide(:title, "Phylotastic Jobs") %>

<% unless @con_link_jobs.empty? %>
  <h2 class="job-heading">Trees acquired from URI</h2>
  <%= render partial: "jobs", locals: {jobs: @con_link_jobs} %>
<% end %>

<% unless @con_file_jobs.empty? %>
  <h2 class="job-heading">Trees acquired from file</h2>
  <%= render partial: "jobs", locals: {jobs: @con_file_jobs} %>
<% end %>

<% unless @con_taxon_jobs.empty? %>
  <h2 class="job-heading">Trees constructed from all sepecies of a taxon</h2>
  <%= render partial: "jobs", locals: {jobs: @con_taxon_jobs} %>
<% end %>

<% unless @selection_taxon_jobs.empty? %>
  <h2 class="job-heading">Trees constructed from some species of a taxon</h2>
  <%= render partial: "jobs", locals: {jobs: @selection_taxon_jobs} %>
<% end %>

<% unless @subset_taxon_jobs.empty? %>
  <h2 class="job-heading">Trees constructed from genome or location</h2>
  <%= render partial: "jobs", locals: {jobs: @subset_taxon_jobs} %>
<% end %>

<% unless @prebuilt_jobs.empty? %>
  <h2 class="job-heading">Trees from pre-built list</h2>
  <%= render partial: "prebuilt_lists" %>
<% end %>
       
<script type="text/javascript">
$(document).ready(function() {
  var processing_trees = <%= @processing %>;
  
  Notification.requestPermission();
  function spawnNotification(theBody,theIcon,theTitle) {
    var options = {
        body: theBody,
        icon: theIcon
    }
    var n = new Notification(theTitle,options);
  }
  socket = new WebSocket("ws://" + window.location.host + "/track")

  socket.onopen = function(event) {
    for (i=processing_trees.length-1; i>=0 ; i--) {
      socket.send(processing_trees[i]);
      $("#" + i).parents("td").siblings('.tree-status').html("<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span>");
    }
  } 
  
  socket.onmessage = function(event) {
    data = JSON.parse(event.data);
    if(event.data.length) {
      // Change status of tree in view
      $("#" + data["tree_id"]).parents("td").siblings('.tree-status').html(tree_status(data["status"]));
      
      if (data["status"] == "completed") {        
        // Remove the tree that "completed" in processing_trees 
        index = processing_trees.indexOf(parseInt(data["tree_id"]));
        if (index > -1) {
          processing_trees.splice(index, 1);
        }
        
        // Hide "check status" btn
        $("#" + data["tree_id"]).parents("td").find('.check-status').addClass("hide");
        
        // Display "view tree" btn
        $("#" + data["tree_id"]).parents("td").children('.action-view').children('.hide').removeClass("hide");
        
        // Send notification
        spawnNotification("Your tree is ready to view", "http://www.cs.nmsu.edu/phylotastic/images/logo_huge.png", "Tree #" + data["tree_id"] + " is " + data["status"]);        
      } else if (data["status"] == "resolved") {
        $("#" + data["tree_id"]).parents("td").children('.action-prune').html("<a href='/trees/" + data["tree_id"] + "/edit'>Check name list</a>");
        
        // Send notification
        spawnNotification("To proceed, choose 'Check name list' in the Jobs table.", "http://www.cs.nmsu.edu/phylotastic/images/logo_huge.png", "Names have been acquired for job #" + data["tree_id"]);
      }
    }
  }

  $(".check-status").click(function(event) {
    event.preventDefault();
    params = $(this).attr('id');
    socket.send(params);
    $("#" + params).parents("td").siblings('.tree-status').html("<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span>");
  })
  
  function tree_status(s) {
    var msg;
    switch(s) {
      case "resolved":
        msg = "Names acquired: click \"verify names\" to approve list and get a tree";
        break;
      case "unsucessfully-resolved":
        msg = "Sorry! We could not acquire a list of names!";
        break;
      case "unsuccessfully-constructed":
        msg = "Sorry! We could not acquire a tree!";
        break;
      case "completed":
        msg = "Tree acquired: click \"View tree\" to see it";
        break;
    }
    return msg;
  }
});


</script>